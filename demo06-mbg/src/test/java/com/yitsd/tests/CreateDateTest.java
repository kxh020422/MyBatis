package com.yitsd.tests;

import com.yitsd.mapper.EmpMapper;
import com.yitsd.pojo.Emp;
import com.yitsd.utils.SqlSessionUtil;
import org.apache.ibatis.session.SqlSession;
import org.junit.Test;

import java.io.IOException;
import java.util.*;

/**
 * @ClassName CreateDateTest
 * @Date 2022/7/24 0:16
 */
public class CreateDateTest {

    @Test
    public void createInfo() throws IOException {
        String[] firstName = {"欧阳", "太史", "端木", "上官", "司马", "东方", "独孤", "南宫", "万俟", "闻人", "夏侯", "诸葛",
                "尉迟", "公羊", "赫连", "澹台", "皇甫", "宗政", "濮阳", "公冶", "太叔", "申屠", "公孙", "慕容", "仲孙", "钟离", "长孙", "宇文", "司徒", "鲜于", "司空", "闾丘", "子车", "亓官", "司寇", "巫马", "公西", "颛孙", "壤驷", "公良", "漆雕", "乐正", "宰父", "谷梁", "拓跋", "夹谷", "轩辕", "令狐", "段干", "百里", "呼延", "东郭", "南门", "羊舌", "微生", "公户", "公玉", "公仪", "梁丘", "公仲", "公上", "公门", "公山", "公坚", "左丘", "公伯", "西门", "公祖", "第五", "公乘", "贯丘", "公皙", "南荣", "东里", "东宫", "仲长", "子书", "子桑", "即墨", "达奚", "褚师 ", "吴铭", "赵", "宋", "顾", "田", "董", "萧", "苏", "于", "何", "梁", "郑", "杜", "秦", "文", "兰", "乔", "贺 ", "安", "颜", "柳", "裴", "祝", "祁", "时", "凌", "席", "景", "柯", "晋", "宫", "郎", "姬", "连", "喻", "卓", "明 ", "桑", "官 ", "竺", "衣", "楚", "佟", "蓝", "封"};

        String[] names = {"青衫隐", "塞上曲", "祭流年", "念往昔", "冰映月", "长相思", "听君意", "青衫湿", "南笙离", "伴青灯", "夜未归", "离心语", "红尘醉", "风渐隐", "长恨歌", "醉清风", "画夕颜", "意君兮", "梦媛", "涵钰", "妲可", "含钰", "连倩", "辰泽", "涵博", "海萍", "祖儿", "佳琪", "诗晗", "之言", "清妍", "淑媛", "智妍", "晴然", "树静", "娜娜", "瑞楠", "晓满", "婉雅", "雨婷", "筱满", "雅文", "玉琪", "敖雯", "文殊", "喻喧", "海英", "舒欣", "云亿", "莨静", "雅芝", "蕴兵", "乐乐", "之恋", "小满", "悦心", "可人", "遣心", "莺语", "流苏", "心抑", "陌染", "莫离", "深栀", "守心", "烟凉", "夏枳", "鸢浅", "酷腻", "忆梦", "夏夕", "孤影", "浅安", "柚屿", "相许", "酔念", "花夏", "绝恋", "微尘", "忆心", "冰吻", "沐馨", "冷曦", "云觞", "墨兮", "森迷", "离染", "忆初", "衬心", "诠释", "尘封", "奔赴", "心鸢", "晴栀", "堇年", "青柠", "埋葬", "夏墨", "随风", "屿暖", "深邃", "途往", "迷离", "槿城", "零落", "余笙", "梦呓", "墨凉", "晨曦", "纪年", "未央", "失语", "柠栀", "梦巷", "九离", "暮雨", "木兮", "浅歌", "沐北", "惜颜", "素笺", "锁心", "柠萌", "卿歌", "归期", "予别", "情笙", "恭良", "弘爰", "锁钊", "犁苒", "羊馨", "危寒", "念萌", "苦俐", "蔚楚", "户生", "简晴", "中念", "苌津", "丁桀", "用慧", "赵航", "丘为", "茹容", "买北", "税河", "曲藏", "寿婷", "陆螺", "祁陶", "浦欢", "书寄", "酒硕", "独华", "竹达", "亓涵", "塞音", "赏虹", "焉玉", "封爽", "程斐", "揭弘", "佟鹏", "首远", "蒲玛", "项柏", "似洮", "邓晗", "谷昶", "向宜", "错豪", "乔流", "和跃", "资枫", "熊盛", "尹绮", "米雁", "汪清", "节泽", "虎烁", "帛蕊", "孛言", "端瀚", "甲赋", "富驹", "邝刚", "杞素", "伯灿", "裔玄", "斛琪", "鹿隽", "酆彭", "台筠", "咸礼", "红琦", "苑紫", "盛蔚", "权司", "郦怿", "成立", "滑英", "陶哲", "出邵", "彤歌", "函纯", "屈文", "遇萦", "农诚", "通慕", "韩景", "岑池", "仁钰", "夷名", "殳炫", "雀田", "强赞", "融胤", "茆璇", "芒风", "都韶", "叶君", "阿芙", "竺梧", "枝骏", "马曲", "帅树", "礼石", "受艺", "牢颐", "顿运", "己问", "盖歌", "丙玲", "舜绚", "旁英", "频琇", "将双", "宜麦", "羽辰", "吕歆", "沈恨", "喜聪", "聊宝", "申悦", "次掣", "尤画", "鱼用", "泰珺", "劳漾", "邰可", "良庆", "祢波", "展从", "抄文", "禽广", "蒉鹍", "康新", "宏卿", "游骞", "朴周", "严南", "苗访", "春豆", "嬴雪", "拜琅", "璩滢", "悉金", "濮语", "淦花", "商宇", "荤震", "表人", "奇箫", "高悌", "晋珠", "翠芬", "羿定", "郯尘", "糜寒", "安笛", "国茜", "大平", "苟华", "敏资", "燕仙", "吴瑜", "辉玉", "牟墨", "关剑", "伏禹", "笃秀", "袁暎", "随默", "翁圣", "卜羲", "薄典", "钞成", "纪俨", "钱洛", "松曾", "召洲", "解晏", "理唱", "革鹤", "骑郁", "粟和", "焦瑗", "邗飞", "道墨", "相芊", "修颜", "暨益", "欧佳", "义旺", "佴魁", "佘如", "依星", "宫发", "玉北", "勤承", "才力", "左程", "士欣", "缑盈", "应玥", "戊国", "田穹", "谢朝", "秦季", "箕义", "励德", "原江", "扈泰", "黎胤", "宇和", "邴珍", "耿瓃", "御恩", "水润", "蒿奥", "厍枫", "初怡", "荣好", "费佩", "冼宁", "东曜", "楼芃", "禄炎", "恽跃", "毋韫", "邬翠", "俎千", "慕祯", "符梓", "侯多", "合菁", "易桂", "登衣", "冠家", "万温", "胡飞", "宾贤", "佛壁", "郭项", "可怀", "衣弘", "车妤", "霍寰", "铎三", "宰哲", "象筠", "琦霈", "接策", "逮筱", "藩莺", "祖昶", "烟伯", "城锐", "隗薄", "圭蓝", "章添", "宿漪", "豆基", "郸蕾", "果行", "寒渺", "析懿", "壬夫", "仆皎", "庞璞", "敬芸", "改祯", "勇淼", "刚勇", "兆鸿", "锺阑", "丰嫣", "扶铄", "柳冰", "雪颖", "京玮", "双艾", "释叡", "明欣", "蛮深", "建野", "雍晨", "归苑", "蔡爱", "风安", "浑宇", "甫辉", "邢嘉", "斯盼", "贺儒", "从孟", "闾实", "佼元", "籍庆", "贵茉", "汝懿", "睢品", "于修", "来淳", "衅佁", "桐饮", "褚宝", "实岑", "运绣", "乜子", "吾家", "居惠", "洛琨", "撒森", "完漠", "骆适", "律颖", "乌健", "系茗", "容苍", "腾泉", "霜奕", "貊侠", "温仁", "步强", "柔禾", "蔺驰", "五宣", "俞姮", "示洽", "波珏", "缪萱", "仰启", "师西", "却锟", "訾弼", "瓮维", "施忻", "阙小", "陈雅", "潮艺", "罗涆", "庚璟", "仲穆", "智玮", "本谷", "巩璠", "类心", "泣灿", "冷长", "多扬", "姚珑", "圣映", "谬焱", "闻藉", "狂全", "姒晟", "进荣", "战铃", "公莹", "谭绍", "袭柔", "狄澈", "仉乔", "抗喜", "问邃", "祭友", "古暖", "由勃", "邹骏", "承荣", "针甫", "开云", "甘又", "逯昕", "典作", "牧耀", "卑婕", "奉孤", "弭楚", "顾希", "梅鸣", "班朗", "洋然", "繁育", "单渊", "有玥", "夏漫", "经娥", "硕晤", "占瑾", "校晗", "党简", "蓟恒", "介翱", "满秋", "杨桃", "慎萌", "殷荃", "植蕙", "惠格", "光合", "奈痴", "花望", "言可", "包醉", "千祥", "友瑜", "刀松", "李骥", "休寿", "候敏", "诸韵", "信滨", "肇漫", "禚经", "史棠", "宗雍", "储皛", "范贞", "拱奕", "戚银", "宦沛", "不舒", "邵菊", "旗凡", "须濯", "福通", "善纵", "乾岑", "卫烨", "定自", "钮丽", "祝旋", "宛荌", "第融", "扬真", "滕赩", "集樱", "笪旻", "但慈", "段腾", "无茗", "脱意", "謇识", "潭笑", "冯飙", "谈贤", "仇彭", "板煦", "载工", "达若", "位焕", "仍觉", "戈觅", "盘良", "宣浩", "山甘", "镇彬", "浮辞", "回典", "营好", "历桐", "忻叡", "斐卿", "力俊", "钊金", "墨骄", "禾空", "庹毅", "巴涤", "金知", "寸霁", "栾溪", "摩惜", "裴铭", "白彩", "赖娜", "柏平", "荆傲", "丛宸", "葛苇", "皋赫", "徐璧", "倪青", "德捷", "弥芦", "徭略", "局锦", "允杨", "舒秋", "布长", "束乾", "凤轩", "凭咏", "傅杰", "茂旭", "敖延", "朋珉", "续姝", "王岳", "延志", "迮乐", "罕彗", "妫开", "碧凯", "野怜", "侨宸", "麦慕", "池奇", "天世", "奕城", "求吟", "鞠尚", "尾瑞", "支名", "梁澹", "充霞", "姬乃", "阮量", "瑞慈", "沐木", "任密", "市初", "漆康", "庄明", "普泽", "文州", "那豫", "桥业", "苍山", "逄禧", "剑之", "阚捷", "夫晖", "彭懋", "掌勋", "匡照", "考轶", "益正", "尔芹", "甄忆", "寇婉", "昔央", "北晋", "乐施", "卷帅", "卢鲲", "愈洲", "巫幻", "邛婀", "厚苓", "赛钧", "望易", "速令", "疏韦", "年阳", "绍凝", "斋容", "偶飇", "性堂", "养叶", "贝军", "迟之", "窦曜", "石风", "秋婵", "务奇", "闳斯", "俟人", "衡茂", "南言", "宋复", "戴齐", "尧齐", "邸茹", "昝起", "蹇倩", "何蓄", "祈羽", "鲍今", "元琲", "卞济", "行博", "张伶", "终丰", "代闳", "堵虎", "昂书", "褒余", "功瑞", "捷意", "伍武", "兴溶", "六游", "蒋绿", "戏利", "郑润", "闵昱", "叔浦", "么霏", "粘逸", "厉蝶", "习远", "帖旋", "郝旎", "军年", "盈婧", "童木", "让晓", "飞馥", "夔朵", "母歆", "及存", "潘栋", "贡靓", "秘燎", "麻峰", "裘图", "孔龙", "江昭", "操祖", "朱林", "麴悟", "枚衍", "汉芳", "隆翼", "令邦", "世鸥", "生溥", "尚一", "陀璟", "刑运", "是颂", "纵静", "桑源", "萨福", "郗彤", "驹碧", "冒载", "季阔", "黄澎", "闪冠", "屠倚", "桂恺", "邶梅", "濯雯", "镜越", "汲向", "毕翔", "湛蕴", "虞专", "库知", "九蔚", "杜霖", "矫海", "委娅", "印甲", "刁庄", "阳伦", "龙囡", "铁瑰", "竭香", "穰濡", "檀纶", "方灵", "泥珹", "毛晖", "林岚", "伊畅", "司闲", "华布", "贯芷", "环放", "家兴", "鄢阳", "亥濮", "后献", "薛举", "广闵", "悟洁", "鄂新", "唐夏", "哀忍", "业晓", "廉笛", "於丹", "许菀", "贸稷", "百日", "席甜", "衷许", "在羡", "琴畴", "绪寻", "钭宛", "况佑", "折涛", "姜临", "姓雨", "紫衍", "勾孟", "锐辰", "韦虹", "真卉", "旅朔", "森材", "嘉芬", "廖代", "区听", "其柏", "弓津", "别尔", "孝才", "怀彤", "覃晔", "洪思", "闽玟", "莫美", "仝惬", "杭桦", "练端", "连会", "澄含", "纳戈", "仪忠", "清望", "肥澜", "辟晶", "辛纳", "干沈", "曾天", "菅宏", "谯鲸", "雷愫", "戢艳", "睦侬", "颜骊", "戎颀", "蒙明", "余双", "贲庸", "栋丁", "素恩", "卿正", "房幼", "魏凌", "卯同", "董未", "常河", "兰情", "后菱", "隐吉", "坚嘉", "晏以", "宝仪", "始暮", "牵荏", "利冉", "栗珍", "巨茵", "綦蔼", "法卓", "渠雪", "郁学", "孙琬", "暴峯", "肖韦", "藤尧", "景嫒", "幸乐", "玄抒", "蹉亦", "泉环", "赤皓", "阴纬", "钦景", "止骄", "门逸", "巢姗", "崔敬", "度音", "隽中", "井昌", "塔谊", "翟安", "旷智", "鄞蒙", "牛祺", "员咸", "皇琛", "守斯", "检亭", "说任", "歧书", "之嫔", "沙钰", "翦依", "告芝", "磨翰", "汗昕", "艾夜", "泷妍", "咎诺", "赫童", "曹莉", "闫蓓", "庆来", "少悦", "零初", "庾葛", "稽柳", "以卓", "平珂", "谏璐", "苏宜", "愚罗", "堂媛", "谌磬", "蚁亮", "皮炳", "隋熙", "蓬春", "柴海", "丑壤", "刘汉", "乙荡", "虢迈", "威舟", "涂坤", "称榆", "乘教", "伦楠", "崇煜", "路宁", "计沉", "畅秉", "管希", "宓畅", "闭睿", "胥易", "势阵", "藏燕", "淡宾", "郎寅", "仵童", "越蓉", "贾斌", "蓝令", "过奥", "吉莞", "詹琪", "尉启", "莘星", "星涵", "希晔", "漫美", "线语", "聂农", "能章", "阎富", "楚兰", "犹真", "卓子", "龚妮", "仙杉", "招米", "眭杰", "声攸", "茅濡", "贰羽", "沃湛", "溥锋", "机火", "汤枝", "荀采", "鲜磊", "英赐", "樊朋", "答靖", "银莲", "海浚", "宁萧", "鲁越", "晁湉", "靖进", "老娇", "武澄", "树博", "爱维", "边裕", "索杏", "诗珧", "敛半", "辜绢"};

        Set<String> empNames = new HashSet<>();

        Random r = new Random();
        for (int i = 0; i < 100; i++) {
            StringBuilder sb = new StringBuilder();
            empNames.add(String.valueOf(sb.append(firstName[r.nextInt(firstName.length)]).append(names[r.nextInt(names.length)])));
        }
        int[] age = new int[]{18, 19, 20, 21, 22, 23, 24};
        String[] gender = {"男", "女"};
        int[] deptIds = {1, 2, 3, 4, 5};
        List<String> myNames = new ArrayList<>(empNames);

        List<Emp> empList = new ArrayList<>();
        for (int i = 0; i < myNames.size(); i++) {
            empList.add(new Emp(null, myNames.get(i), age[r.nextInt(age.length)], gender[r.nextInt(gender.length)], deptIds[r.nextInt(deptIds.length)]));
        }

        SqlSession sqlSession = SqlSessionUtil.getSqlSession();
        EmpMapper mapper = sqlSession.getMapper(EmpMapper.class);
        for (Emp emp : empList) {
            mapper.insert(emp);
        }

    }

}
